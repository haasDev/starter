exports[`App should render 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="app">
    <Breadcrumbs
        activeCrumb={undefined}
        items={
            Array [
                Object {
                  "id": 1,
                  "label": "Foo",
                },
                Object {
                  "id": 2,
                  "label": "Bar",
                },
                Object {
                  "id": 3,
                  "label": "Baz",
                },
              ]
        }
        onNavigate={[Function]} />
    <div
        className="error" />
    <div
        className="body">
        <DataEntry
            description=""
            name="" />
        <ButtonSet
            buttons={
                Array [
                    Object {
                      "disabled": true,
                      "kind": "primary",
                      "onClick": [Function],
                      "text": "Save",
                    },
                    Object {
                      "disabled": false,
                      "kind": "info",
                      "onClick": [Function],
                      "text": "Info",
                    },
                    Object {
                      "kind": "danger",
                      "onClick": [Function],
                      "text": "Cancel",
                    },
                  ]
            } />
        <LookupInput
            img="search"
            onChange={[Function]}
            onSubmit={[Function]} />
        <DropupBtn
            btn={
                Object {
                    "btnText": "My button",
                    "disabled": false,
                    "kind": "danger",
                  }
            }
            links={
                Array [
                    Object {
                      "onClick": [Function],
                      "separator": false,
                      "text": "link 1",
                    },
                    Object {
                      "onClick": [Function],
                      "separator": false,
                      "text": "link 2",
                    },
                  ]
            } />
        <DateRange
            endDate={"2017-03-14T22:20:13.846Z"}
            onEndDateChanged={[Function]}
            onStartDateChanged={[Function]}
            startDate={"2017-03-14T22:20:13.846Z"} />
        <TargetSelect
            categories={Array []}
            onChange={[Function]}
            selectedCategory=""
            selectedTarget=""
            targets={Array []} />
        <WizardSteps
            steps={
                Array [
                    "Assign Products",
                    "Add Trail Data",
                    "Add Observations",
                  ]
            } />
    </div>
</div>,
  "nodes": Array [
    <div
      className="app">
      <Breadcrumbs
            activeCrumb={undefined}
            items={
                  Array [
                        Object {
                          "id": 1,
                          "label": "Foo",
                        },
                        Object {
                          "id": 2,
                          "label": "Bar",
                        },
                        Object {
                          "id": 3,
                          "label": "Baz",
                        },
                      ]
            }
            onNavigate={[Function]} />
      <div
            className="error" />
      <div
            className="body">
            <DataEntry
                  description=""
                  name="" />
            <ButtonSet
                  buttons={
                        Array [
                              Object {
                                "disabled": true,
                                "kind": "primary",
                                "onClick": [Function],
                                "text": "Save",
                              },
                              Object {
                                "disabled": false,
                                "kind": "info",
                                "onClick": [Function],
                                "text": "Info",
                              },
                              Object {
                                "kind": "danger",
                                "onClick": [Function],
                                "text": "Cancel",
                              },
                            ]
                  } />
            <LookupInput
                  img="search"
                  onChange={[Function]}
                  onSubmit={[Function]} />
            <DropupBtn
                  btn={
                        Object {
                              "btnText": "My button",
                              "disabled": false,
                              "kind": "danger",
                            }
                  }
                  links={
                        Array [
                              Object {
                                "onClick": [Function],
                                "separator": false,
                                "text": "link 1",
                              },
                              Object {
                                "onClick": [Function],
                                "separator": false,
                                "text": "link 2",
                              },
                            ]
                  } />
            <DateRange
                  endDate={"2017-03-14T22:20:13.846Z"}
                  onEndDateChanged={[Function]}
                  onStartDateChanged={[Function]}
                  startDate={"2017-03-14T22:20:13.846Z"} />
            <TargetSelect
                  categories={Array []}
                  onChange={[Function]}
                  selectedCategory=""
                  selectedTarget=""
                  targets={Array []} />
            <WizardSteps
                  steps={
                        Array [
                              "Assign Products",
                              "Add Trail Data",
                              "Add Observations",
                            ]
                  } />
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <App
        date={"2017-03-14T22:20:13.846Z"} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": App {
        "_reactInternalInstance": [Circular],
        "breadcrumbs": Array [
          Object {
            "id": 1,
            "label": "Foo",
          },
          Object {
            "id": 2,
            "label": "Bar",
          },
          Object {
            "id": 3,
            "label": "Baz",
          },
        ],
        "context": Object {},
        "onCategorySelect": [Function],
        "onEndDateChanged": [Function],
        "onNavigate": [Function],
        "onStartDateChanged": [Function],
        "props": Object {
          "date": "2017-03-14T22:20:13.846Z",
        },
        "refs": Object {},
        "state": Object {
          "activeCrumb": undefined,
          "description": "",
          "endDate": "2017-03-14T22:20:13.846Z",
          "error": "",
          "name": "",
          "productCategories": Array [],
          "productTargets": Array [],
          "projectMap": Object {},
          "selectedCategory": "",
          "selectedTarget": "",
          "startDate": "2017-03-14T22:20:13.846Z",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="app">
          <Breadcrumbs
                    activeCrumb={undefined}
                    items={
                              Array [
                                        Object {
                                          "id": 1,
                                          "label": "Foo",
                                        },
                                        Object {
                                          "id": 2,
                                          "label": "Bar",
                                        },
                                        Object {
                                          "id": 3,
                                          "label": "Baz",
                                        },
                                      ]
                    }
                    onNavigate={[Function]} />
          <div
                    className="error" />
          <div
                    className="body">
                    <DataEntry
                              description=""
                              name="" />
                    <ButtonSet
                              buttons={
                                        Array [
                                                  Object {
                                                    "disabled": true,
                                                    "kind": "primary",
                                                    "onClick": [Function],
                                                    "text": "Save",
                                                  },
                                                  Object {
                                                    "disabled": false,
                                                    "kind": "info",
                                                    "onClick": [Function],
                                                    "text": "Info",
                                                  },
                                                  Object {
                                                    "kind": "danger",
                                                    "onClick": [Function],
                                                    "text": "Cancel",
                                                  },
                                                ]
                              } />
                    <LookupInput
                              img="search"
                              onChange={[Function]}
                              onSubmit={[Function]} />
                    <DropupBtn
                              btn={
                                        Object {
                                                  "btnText": "My button",
                                                  "disabled": false,
                                                  "kind": "danger",
                                                }
                              }
                              links={
                                        Array [
                                                  Object {
                                                    "onClick": [Function],
                                                    "separator": false,
                                                    "text": "link 1",
                                                  },
                                                  Object {
                                                    "onClick": [Function],
                                                    "separator": false,
                                                    "text": "link 2",
                                                  },
                                                ]
                              } />
                    <DateRange
                              endDate={"2017-03-14T22:20:13.846Z"}
                              onEndDateChanged={[Function]}
                              onStartDateChanged={[Function]}
                              startDate={"2017-03-14T22:20:13.846Z"} />
                    <TargetSelect
                              categories={Array []}
                              onChange={[Function]}
                              selectedCategory=""
                              selectedTarget=""
                              targets={Array []} />
                    <WizardSteps
                              steps={
                                        Array [
                                                  "Assign Products",
                                                  "Add Trail Data",
                                                  "Add Observations",
                                                ]
                              } />
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="app">
          <Breadcrumbs
                    activeCrumb={undefined}
                    items={
                              Array [
                                        Object {
                                          "id": 1,
                                          "label": "Foo",
                                        },
                                        Object {
                                          "id": 2,
                                          "label": "Bar",
                                        },
                                        Object {
                                          "id": 3,
                                          "label": "Baz",
                                        },
                                      ]
                    }
                    onNavigate={[Function]} />
          <div
                    className="error" />
          <div
                    className="body">
                    <DataEntry
                              description=""
                              name="" />
                    <ButtonSet
                              buttons={
                                        Array [
                                                  Object {
                                                    "disabled": true,
                                                    "kind": "primary",
                                                    "onClick": [Function],
                                                    "text": "Save",
                                                  },
                                                  Object {
                                                    "disabled": false,
                                                    "kind": "info",
                                                    "onClick": [Function],
                                                    "text": "Info",
                                                  },
                                                  Object {
                                                    "kind": "danger",
                                                    "onClick": [Function],
                                                    "text": "Cancel",
                                                  },
                                                ]
                              } />
                    <LookupInput
                              img="search"
                              onChange={[Function]}
                              onSubmit={[Function]} />
                    <DropupBtn
                              btn={
                                        Object {
                                                  "btnText": "My button",
                                                  "disabled": false,
                                                  "kind": "danger",
                                                }
                              }
                              links={
                                        Array [
                                                  Object {
                                                    "onClick": [Function],
                                                    "separator": false,
                                                    "text": "link 1",
                                                  },
                                                  Object {
                                                    "onClick": [Function],
                                                    "separator": false,
                                                    "text": "link 2",
                                                  },
                                                ]
                              } />
                    <DateRange
                              endDate={"2017-03-14T22:20:13.846Z"}
                              onEndDateChanged={[Function]}
                              onStartDateChanged={[Function]}
                              startDate={"2017-03-14T22:20:13.846Z"} />
                    <TargetSelect
                              categories={Array []}
                              onChange={[Function]}
                              selectedCategory=""
                              selectedTarget=""
                              targets={Array []} />
                    <WizardSteps
                              steps={
                                        Array [
                                                  "Assign Products",
                                                  "Add Trail Data",
                                                  "Add Observations",
                                                ]
                              } />
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <App
    date={"2017-03-14T22:20:13.846Z"} />,
}
`;
